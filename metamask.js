"use strict";function _defineProperty(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const ONBOARDING_STATE={INSTALLED:"INSTALLED",NOT_INSTALLED:"NOT_INSTALLED",REGISTERED:"REGISTERED",REGISTERING:"REGISTERING",RELOADING:"RELOADING"},EXTENSION_DOWNLOAD_URL={CHROME:"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn",FIREFOX:"https://addons.mozilla.org/firefox/addon/ether-metamask/",DEFAULT:"https://metamask.io"},REGISTRATION_IN_PROGRESS="REGISTRATION_IN_PROGRESS",FORWARDER_ID="FORWARDER_ID";class Onboarding{constructor({forwarderOrigin:e="https://fwd.metamask.io",forwarderMode:r=Onboarding.FORWARDER_MODE.INJECT}={}){this.forwarderOrigin=e,this.forwarderMode=r,this.state=Onboarding.isMetaMaskInstalled()?ONBOARDING_STATE.INSTALLED:ONBOARDING_STATE.NOT_INSTALLED;const t=Onboarding._detectBrowser();this.downloadUrl=t?EXTENSION_DOWNLOAD_URL[t]:EXTENSION_DOWNLOAD_URL.DEFAULT,this._onMessage=this._onMessage.bind(this),this._onMessageFromForwarder=this._onMessageFromForwarder.bind(this),this._openForwarder=this._openForwarder.bind(this),this._openDownloadPage=this._openDownloadPage.bind(this),this.startOnboarding=this.startOnboarding.bind(this),this.stopOnboarding=this.stopOnboarding.bind(this),window.addEventListener("message",this._onMessage),r===Onboarding.FORWARDER_MODE.INJECT&&"true"===sessionStorage.getItem(REGISTRATION_IN_PROGRESS)&&Onboarding._injectForwarder(this.forwarderOrigin)}_onMessage(e){if(e.origin===this.forwarderOrigin)return"metamask:reload"===e.data.type?this._onMessageFromForwarder(e):void console.debug(`Unknown message from '${e.origin}' with data ${JSON.stringify(e.data)}`)}_onMessageUnknownStateError(e){throw new Error(`Unknown state: '${e}'`)}async _onMessageFromForwarder(e){switch(this.state){case ONBOARDING_STATE.RELOADING:console.debug("Ignoring message while reloading");break;case ONBOARDING_STATE.NOT_INSTALLED:console.debug("Reloading now to register with MetaMask"),this.state=ONBOARDING_STATE.RELOADING,location.reload();break;case ONBOARDING_STATE.INSTALLED:console.debug("Registering with MetaMask"),this.state=ONBOARDING_STATE.REGISTERING,await Onboarding._register(),this.state=ONBOARDING_STATE.REGISTERED,e.source.postMessage({type:"metamask:registrationCompleted"},e.origin),this.stopOnboarding();break;case ONBOARDING_STATE.REGISTERING:console.debug("Already registering - ignoring reload message");break;case ONBOARDING_STATE.REGISTERED:console.debug("Already registered - ignoring reload message");break;default:this._onMessageUnknownStateError(this.state)}}startOnboarding(){sessionStorage.setItem(REGISTRATION_IN_PROGRESS,"true"),this._openDownloadPage(),this._openForwarder()}stopOnboarding(){"true"===sessionStorage.getItem(REGISTRATION_IN_PROGRESS)&&(this.forwarderMode===Onboarding.FORWARDER_MODE.INJECT&&(console.debug("Removing forwarder"),Onboarding._removeForwarder()),sessionStorage.setItem(REGISTRATION_IN_PROGRESS,"false"))}_openForwarder(){this.forwarderMode===Onboarding.FORWARDER_MODE.OPEN_TAB?window.open(this.forwarderOrigin,"_blank"):Onboarding._injectForwarder(this.forwarderOrigin)}_openDownloadPage(){window.open(this.downloadUrl,"_blank")}static isMetaMaskInstalled(){return Boolean(window.ethereum&&window.ethereum.isMetaMask)}static _register(){return window.ethereum.request({method:"wallet_registerOnboarding"})}static _injectForwarder(e){const r=document.body,t=document.createElement("iframe");t.setAttribute("height","0"),t.setAttribute("width","0"),t.setAttribute("style","display: none;"),t.setAttribute("src",e),t.setAttribute("id",FORWARDER_ID),r.insertBefore(t,r.children[0])}static _removeForwarder(){var e;null===(e=document.getElementById(FORWARDER_ID))||void 0===e||e.remove()}static _detectBrowser(){return navigator.userAgent.match(/firefox|fxios/i)?"FIREFOX":navigator.userAgent.match(/chrome|chromium|crios/i)?"CHROME":null}}export default Onboarding;_defineProperty(Onboarding,"FORWARDER_MODE",{INJECT:"INJECT",OPEN_TAB:"OPEN_TAB"});
